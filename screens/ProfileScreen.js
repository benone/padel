import React, { useState } from 'react';
import {
  SafeAreaView,
  View,
  Text,
  ScrollView,
  TouchableOpacity,
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { 
  Chip, 
  PersonCard, 
  ClubCard, 
  StatCard, 
  RankingCard,
  ProgressBar,
  TabNavigation 
} from '../components/ui';
import { ProfileHeader, ProfileInfo, styles } from '../components/profile';

export default function ProfileScreen({ navigation }) {
  const [activeTab, setActiveTab] = useState('activities');

  return (
    <SafeAreaView style={styles.root}>
      <ProfileHeader navigation={navigation} />

      <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
        <ProfileInfo />

        <TabNavigation
          tabs={[
            { key: 'activities', label: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å' },
            { key: 'posts', label: '–ü–æ—Å—Ç—ã' }
          ]}
          activeTab={activeTab}
          onTabChange={setActiveTab}
        />

        {activeTab === 'activities' && (
          <ActivitiesTab />
        )}

        {activeTab === 'posts' && (
          <PostsTab />
        )}
      </ScrollView>
    </SafeAreaView>
  );
}

function ActivitiesTab() {
  return (
    <View>
      <View style={styles.sportsFilter}>
        <Chip label="–ü–∞–¥–µ–ª" active={true} onPress={() => {}} />
        <Chip label="–¢–µ–Ω–Ω–∏—Å" active={false} onPress={() => {}} />
        <Chip label="–ü–∏–∫–ª–±–æ–ª" active={false} onPress={() => {}} />
      </View>

      <LevelCard />
      <LevelProgressSection />
      <PlayerPreferencesSection />
      <RecentMatchesSection />
      <StatisticsSection />
      <PeopleSection />
      <ClubsSection />
      <RankingsSection />
    </View>
  );
}

function PostsTab() {
  return (
    <View style={styles.tabContent}>
      <Text style={styles.comingSoon}>–ü–æ—Å—Ç—ã</Text>
      <Text style={styles.comingSoonSub}>–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ</Text>
    </View>
  );
}

function LevelCard() {
  return (
    <View style={styles.levelCard}>
      <View style={styles.levelHeader}>
        <View>
          <Text style={styles.levelLabel}>üèÜ –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å</Text>
          <Text style={styles.levelNumber}>0.69</Text>
        </View>
        <View style={styles.reliabilityBadge}>
          <Text style={styles.reliabilityText}>–°–†–ï–î–ù–ò–ô</Text>
        </View>
      </View>
      <View style={styles.progressContainer}>
        <ProgressBar 
          percentage={64.84} 
          showLabel={true}
          label="–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å —É—Ä–æ–≤–Ω—è: 64.84%"
        />
      </View>
    </View>
  );
}

function LevelProgressSection() {
  return (
    <View style={styles.section}>
      <Text style={styles.sectionTitle}>–ü—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–≤–Ω—è</Text>
      
      <View style={styles.filterButtons}>
        <Chip label="5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" active={true} onPress={() => {}} />
        <Chip label="10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" active={false} badge={9} onPress={() => {}} />
        <Chip label="–í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã" active={false} badge={9} onPress={() => {}} />
      </View>

      <MatchResultCard />
      <LevelChart />
    </View>
  );
}

function MatchResultCard() {
  return (
    <View style={styles.matchCard}>
      <View style={styles.matchHeader}>
        <View style={styles.matchTitleContainer}>
          <Ionicons name="trophy" size={20} color="#f59e0b" />
          <Text style={styles.matchTitle}>–û—Ç–∫—Ä—ã—Ç—ã–π –º–∞—Ç—á</Text>
        </View>
        <Text style={styles.matchDate}>06/01/2025</Text>
      </View>
      <Text style={{ textAlign: 'center', color: '#6b7280', padding: 20 }}>
        –î–µ—Ç–∞–ª–∏ –º–∞—Ç—á–∞
      </Text>
    </View>
  );
}

function LevelChart() {
  return (
    <View style={styles.chartContainer}>
      <Text style={{ textAlign: 'center', color: '#6b7280', padding: 20 }}>
        –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—Ä–æ–≤–Ω—è
      </Text>
    </View>
  );
}

function PlayerPreferencesSection() {
  const preferences = [
    { icon: 'üëã', label: '–õ—É—á—à–∞—è —Ä—É–∫–∞', value: '–ü—Ä–∞–≤—à–∞' },
    { icon: 'üìç', label: '–ü–æ–∑–∏—Ü–∏—è –Ω–∞ –∫–æ—Ä—Ç–µ', value: '–û–±–µ —Å—Ç–æ—Ä–æ–Ω—ã' },
    { icon: 'üåÖ', label: '–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–æ–µ –≤—Ä–µ–º—è –∏–≥—Ä—ã', value: '–í–µ—á–µ—Ä–æ–º' },
  ];

  return (
    <View style={styles.section}>
      <Text style={styles.sectionTitle}>–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞</Text>
      {preferences.map((pref, index) => (
        <View key={index} style={styles.preferenceItem}>
          <Text style={styles.preferenceIcon}>{pref.icon}</Text>
          <View>
            <Text style={styles.preferenceLabel}>{pref.label}</Text>
            <Text style={styles.preferenceValue}>{pref.value}</Text>
          </View>
        </View>
      ))}
    </View>
  );
}

function RecentMatchesSection() {
  return (
    <View style={styles.section}>
      <Text style={styles.sectionTitle}>–ú–∞—Ç—á–∏</Text>
      <Text style={{ textAlign: 'center', color: '#6b7280', padding: 20 }}>
        –ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–∞—Ç—á–∏
      </Text>
    </View>
  );
}

function StatisticsSection() {
  return (
    <View style={styles.section}>
      <Text style={styles.sectionTitle}>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Text>
      
      <View style={styles.statsGrid}>
        <StatCard number="37" label="–í—Å–µ–≥–æ" />
        <StatCard number="12" label="–í—ã–∏–≥—Ä–∞–Ω–æ" color="#10b981" />
        <StatCard number="10" label="–ü–æ—Å–ª–µ–¥–Ω–∏–µ" />
        <StatCard number="4" label="–í—ã–∏–≥—Ä–∞–Ω–æ" color="#10b981" />
      </View>
      
      <View style={styles.effectivenessCard}>
        <View style={styles.effectivenessIcon}>
          <Ionicons name="analytics" size={32} color="#3b82f6" />
        </View>
        <Text style={styles.effectivenessNumber}>40%</Text>
        <Text style={styles.effectivenessLabel}>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</Text>
        <Text style={styles.effectivenessSubLabel}>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10</Text>
        <View style={styles.effectivenessProgress}>
          <ProgressBar 
            percentage={40} 
            color="#3b82f6"
            backgroundColor="#f3f4f6"
            height={8}
          />
        </View>
      </View>
    </View>
  );
}

function PeopleSection() {
  return (
    <View style={styles.section}>
      <Text style={styles.sectionTitle}>–õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–∞–ª–∏ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º</Text>
      
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.peopleScroll}>
        <PersonCard
          initials="AC"
          name="–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö."
          level="0.95"
          matches="19"
          onPress={() => {}}
        />
        <PersonCard
          avatar="https://images.unsplash.com/photo-1494790108755-2616c5fab5e7?w=200&h=200&fit=crop&crop=face"
          name="–ú–∞—Ä–∏—è –í–æ—Å"
          level="1.38"
          matches="5"
          onPress={() => {}}
        />
        <PersonCard
          avatar="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&h=200&fit=crop&crop=face"
          name="–°–µ—Ä–≥–µ–π"
          level="0.84"
          matches="4"
          onPress={() => {}}
        />
      </ScrollView>
    </View>
  );
}

function ClubsSection() {
  return (
    <View style={styles.section}>
      <Text style={styles.sectionTitle}>–ö–ª—É–±—ã, –≥–¥–µ –∏–≥—Ä–∞–µ—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞</Text>
      
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.clubsScroll}>
        <ClubCard
          image="https://images.unsplash.com/photo-1551698618-1dfe5d97d256?w=300&h=200&fit=crop"
          name="–ü–∞–¥–µ–ª –¶–µ–Ω—Ç—Ä –°–£–ú–ê"
          location="–ü—É—à–∫–∏–Ω"
          onPress={() => {}}
        />
        <ClubCard
          image="https://images.unsplash.com/photo-1544966503-7fdb27fca2d8?w=300&h=200&fit=crop"
          name="–ü–∞–¥–µ–ª –ê—Ä–µ–Ω–∞"
          location="–í–∞—Å–∏–ª—å–µ–≤—Å–∫–∏–π –æ—Å—Ç—Ä–æ–≤"
          onPress={() => {}}
        />
        <ClubCard
          image="https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=300&h=200&fit=crop"
          name="Fair Play"
          location="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"
          onPress={() => {}}
        />
      </ScrollView>
    </View>
  );
}

function RankingsSection() {
  return (
    <View style={styles.section}>
      <Text style={styles.sectionTitle}>–†–µ–π—Ç–∏–Ω–≥–∏</Text>
      
      <View style={styles.rankingsContainer}>
        <RankingCard
          title="–†–µ–π—Ç–∏–Ω–≥ –ø–∞–¥–µ–ª —É—Ä–æ–≤–Ω—è"
          value="#0.69"
          unit="LvL"
        />
        <RankingCard
          title="–ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–∞–¥–µ–ª"
          value="#3,154.74"
        />
      </View>
    </View>
  );
}